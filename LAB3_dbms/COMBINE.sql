SELECT AVG(PRICE), SUM(PRICE)
FROM ITEMS;

SELECT * FROM INGREDIENTS;

SELECT SUM(INVENTORY) AS TOT_INVENTORY
FROM INGREDIENTS;

SELECT MIN(DATEADDED) AS LAST
FROM ITEMS;

SELECT STOREID, SUM(PRICE)
FROM ORDERS;

SELECT COUNT(INGREDIENTID), COUNT(DISTINCT FOODGROUP)
FROM INGREDIENTS
WHERE FOODGROUP IS NOT NULL;

SELECT COUNT(FOODGROUP), COUNT(DISTINCT FOODGROUP)
FROM INGREDIENTS;

SELECT 'RESULTS: ' AS " ", COUNT(*) AS NONINGREDIENTS,
COUNT(INVENTORY) AS COUNTINGREDIENTS,
SUM(DISTINCT INVENTORY) AS TOTALINGREDIENTS FROM INGREDIENTS;

SELECT STOREID, ORDERNUMBER, SUM(PRICE)
FROM ORDERS
GROUP BY STOREID, ORDERnumber;

SELECT VENDORID, COUNT(DISTINCT FOODGROUP)
FROM INGREDIENTS
GROUP BY VENDORID;

SELECT STOREID, SUM(PRICE)
FROM ORDERS
GROUP BY STOREID
ORDER BY COUNT(*);

SELECT VENDORID, FOODGROUP
FROM INGREDIENTS
GROUP BY VENDORID, FOODGROUP;

SELECT VENDORID, FOODGROUP
FROM INGREDIENTS
GROUP BY FOODGROUP, VENDORID;

SELECT COUNT(DISTINCT FOODGROUP), COUNT(DISTINCT VENDORID)
FROM INGREDIENTS;

SELECT VENDORID, FOODGROUP
FROM INGREDIENTS

SELECT STOREID, MAX(LINENUMBER) AS "ITEMS SOLD"
FROM ORDERS
GROUP BY STOREID
WHERE STOREID NOT 'CASTR'
HAVING SUM(PRICE)>20;

SELECT SUM(PRICE) AS SALES
FROM ORDERS
GROUP BY STOREID
HAVING STOREID='FIRST';

SELECT SUM(PRICE) AS SALES
FROM ORDERS 
WHERE STOREID = 'FIRST'
GROUP BY STOREID

SELECT MAX(UNITPRICE) AS 'MAX_PRICE', MIN(UNITPRICE) AS 'MIN_PRICE'
FROM INGREDIENTS
WHERE FOODGROUP IS NOT NULL
GROUP BY FOODGROUP
HAVING COUNT(*) > 2 OR
COUNT(INVENTORY) > 500

-- EX1

--1.
SELECT VENDORID 
FROM VENDORS
WHERE REPLNAME = 'GRAPE'

--2
SELECT INGREDIENTID
FROM INGREDIENTS
WHERE FOODGROUP = 'FRUIT' AND INVENTORY > 100

--3
SELECT INGREDIENTID, UNITPRICE
FROM INGREDIENTS
WHERE VENDORID = 'VGRUS'
ORDER BY UNITPRICE ASC

--4
SELECT MAX(DATEADDED)
FROM ITEMS

--5
SELECT REFERREDBY,  COUNT(VENDORID) AS 'NUM_REFERRED'
FROM VENDORS
GROUP BY REFERREDBY
HAVING COUNT(VENDORID) > 1;

SELECT VENDORID, REFERREDBY FROM VENDORS