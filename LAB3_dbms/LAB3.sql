SELECT AVG(SALARY) AS AVG_SALARY
FROM EMPLOYEES;

SELECT DEPTCODE, AVG(SALARY) AS DEPT_AVG
FROM EMPLOYEES
GROUP BY DEPTCODE;

SELECT DEPTCODE FROM EMPLOYEES;

SELECT MIN(REVENUE) AS MIN_REV, MAX(REVENUE) AS MAX_REV
FROM PROJECTS
WHERE (ENDDATE IS NULL OR ENDDATE>GETDATE()) AND REVENUE!=0;

SELECT EMPLOYEEID, COUNT(PROJECTID) AS TOT_PROJ
FROM WORKSON
GROUP BY EMPLOYEEID;

SELECT COUNT(PROJECTID) FROM WORKSON WHERE EMPLOYEEID IS NOT NULL;

SELECT MAX(LASTNAME) FROM EMPLOYEES;

SELECT STDEV(SALARY) FROM EMPLOYEES;

SELECT DEPTCODE, COUNT(EMPLOYEEID)
FROM EMPLOYEES
GROUP BY DEPTCODE;

SELECT DEPTCODE, AVG(REVENUE), COUNT(PROJECTID)
FROM PROJECTS
GROUP BY DEPTCODE
HAVING COUNT(PROJECTID) > 0;

SELECT * FROM WORKSON

SELECT COUNT(EMPLOYEEID)
FROM EMPLOYEES
HAVING DEPTCODE IS NOT NULL

SELECT * FROM EMPLOYEES

SELECT EMPLOYEEID
FROM WORKSON
GROUP BY EMPLOYEEID
HAVING SUM(ASSIGNEDTIME)*100>=100;

SELECT DEPTCODE, SUM(SALARY*1.10)
FROM EMPLOYEES
WHERE LASTNAME LIKE '%re'
GROUP BY DEPTCODE;

SELECT * FROM EMPLOYEES

SELECT INGREDIENTS.VENDORID, NAME, COMPANYNAME
FROM INGREDIENTS, VENDORS
WHERE INGREDIENTS.VENDORID = VENDORS.VENDORID;

SELECT NAME
FROM INGREDIENTS, vendors
WHERE COMPANYNAME = 'VEGGIES_R_US' AND INGREDIENTS.VENDORID = VENDORS.VENDORID;

SELECT V2.COMPANYNAME
FROM VENDORS V1, VENDORS V2
WHERE V1.VENDORID = V2.REFERREDBY AND V1.COMPANYNAME = 'VEGGIES_R_US';

SELECT ITEMS.NAME, ING.NAME
FROM ITEMS, MADEWITH MW, INGREDIENTS ING
WHERE ITEMS.ITEMID = MW.ITEMID AND MW.INGREDIENTID = ING.ingredientid
AND
3*MW.QUANTITY > ING.INVENTORY;

SELECT I1.PRICE, I1.NAME
FROM ITEMS I1, ITEMS I2
WHERE I1.PRICE > I2.PRICE 
AND
I2.NAME = 'GARDEN SALAD'

SELECT NAME
FROM INGREDIENTS I INNER JOIN VENDORS V ON I.VENDORID = V.VENDORID
WHERE V.COMPANYNAME = 'VEGGIES_R_US'; 

SELECT I.NAME
FROM ITEMS I INNER JOIN MADEWITH MW ON I.ITEMID = MW.ITEMID INNER JOIN INGREDIENTS ING  ON ING.INGREDIENTID = MW.ingredientid INNER JOIN VENDORS V ON V.VENDORID = ING.vendorid
WHERE V.COMPANYNAME = 'VEGGIES_R_US' 

SELECT COMPANYNAME, ING.ingredientid
FROM VENDORS V JOIN INGREDIENTS ING ON ING.VENDORID = V.vendorid
WHERE INGREDIENTID IS NULL


SELECT COMPANYNAME, ING.ingredientid
FROM VENDORS V LEFT JOIN INGREDIENTS ING ON ING.VENDORID = V.vendorid
WHERE INGREDIENTID IS NULL

SELECT COMPANYNAME
FROM VENDORS V , INGREDIENTS ING
WHERE ING.ingredientid IS NULL AND ING.vendorid = V.vendorid

SELECT I.NAME, V.VENDORID AS VENDOR
FROM INGREDIENTS I
CROSS JOIN VENDORS V
ORDER BY V.VENDORID;

--1
SELECT EMP.FIRSTNAME
FROM EMPLOYEES EMP, DEPARTMENTS DEPT
WHERE EMP.DEPTCODE = DEPT.CODE AND DEPT.NAME = 'CONSULTING'

SELECT EMP.FIRSTNAME
FROM EMPLOYEES EMP CROSS JOIN DEPARTMENTS DEPT
WHERE EMP.DEPTCODE = DEPT.CODE AND DEPT.NAME = 'CONSULTING'

--2

SELECT FIRSTNAME
FROM EMPLOYEES, DEPARTMENTS, WORKSON
WHERE EMPLOYEES.DEPTCODE = DEPARTMENTS.CODE AND NAME = 'CONSULTING'
AND
WORKSON.EMPLOYEEID = EMPLOYEES.EMPLOYEEID AND 
WORKSON.PROJECTID = 'ADT4MFIA' AND WORKSON.ASSIGNEDTIME > 0.20

SELECT EMP.FIRSTNAME + ' ' + emp.lastname
FROM EMPLOYEES EMP JOIN DEPARTMENTS DEPT ON EMP.DEPTCODE = DEPT.CODE
JOIN
WORKSON WO ON WO.EMPLOYEEID = EMP.EMPLOYEEID
WHERE DEPT.NAME = 'CONSULTING' AND WO.PROJECTID = 'ADT4MFIA' AND 
WO.ASSIGNEDTIME > 0.20

SELECT
DISTINCT(FIRSTNAME +' '+ LASTNAME) AS NAME FROM EMPLOYEES
E,DEPARTMENTS D , WORKSON W,
(SELECT W.EMPLOYEEID,W.PROJECTID,
(W.ASSIGNEDTIME/SATIME.SAT)*100 AS SAT FROM WORKSON W,
(SELECT SUM(ASSIGNEDTIME) AS SAT, EMPLOYEEID FROM WORKSON
GROUP BY EMPLOYEEID) SATIME
WHERE W.EMPLOYEEID=SATIME.EMPLOYEEID) ASSIGN WHERE
E.DEPTCODE= D.CODE AND D.NAME='Consulting' AND E.EMPLOYEEID =
W.EMPLOYEEID AND W.PROJECTID='ADT4MFIA' AND
ASSIGN.EMPLOYEEID=E.EMPLOYEEID AND ASSIGN.SAT>20;

--3
SELECT SUM(ASSIGNEDTIME)
FROM WORKSON, EMPLOYEES
WHERE WORKSON.EMPLOYEEID = EMPLOYEES.EMPLOYEEID
AND 
FIRSTNAME = 'ABE' AND LASTNAME = 'ADVICE'

SELECT SUM(ASSIGNEDTIME)
FROM WORKSON WO JOIN EMPLOYEES EMP ON WO.EMPLOYEEID = EMP.EMPLOYEEID
WHERE FIRSTNAME = 'ABE' AND LASTNAME = 'ADVICE'

--4
SELECT DISTINCT(PRO.PROJECTID)
FROM PROJECTS PRO, WORKSON WO
WHERE PRO.PROJECTID = WO.PROJECTID AND WO.ASSIGNEDTIME > 0.70;

SELECT DISTINCT(PRO.PROJECTID)
FROM PROJECTS PRO JOIN WORKSON WO ON WO.PROJECTID  = PRO.PROJECTID
WHERE WO.assignedtime > 0.70

--5
SELECT WO.EMPLOYEEID, COUNT(WO.PROJECTID) AS NUM_PROJECTS, 
SUM(WO.ASSIGNEDTIME) AS TOT_TIME
FROM WORKSON WO LEFT JOIN PROJECTS PRO ON WO.projectid = PRO.projectid
GROUP BY WO.employeeid 

SELECT E.EMPLOYEEID,
COUNT(W.PROJECTID) AS "NUMBER OF PROJECTS",
SUM(ASSIGNEDTIME)*100 AS "TOTAL PERCENTAGE OF TIME"
FROM EMPLOYEES E LEFT JOIN WORKSON W ON
E.EMPLOYEEID=W.EMPLOYEEID JOIN PROJECTS P ON
W.PROJECTID=P.PROJECTID WHERE P.ENDDATE >GETDATE() OR
P.ENDDATE IS NULL GROUP BY E.EMPLOYEEID;

--6
SELECT PRO.DESCRIPTION
FROM PROJECTS PRO JOIN WORKSON WO ON PRO.projectid = WO.projectid
WHERE WO.employeeid IS NULL

SELECT * FROM WORKSON

SELECT DISTINCT(P.DESCRIPTION) FROM PROJECTS P LEFT JOIN
WORKSON W ON P.PROJECTID=W.PROJECTID WHERE W.EMPLOYEEID IS
NULL;

SELECT * FROM PROJECTS

SELECT * FROM WORKSON

--7
SELECT PRO.PROJECTID, MAX(ASSIGNEDTIME)
FROM WORKSON WO, PROJECTS PRO
WHERE WO.PROJECTID = PRO.PROJECTID
GROUP BY PRO.projectid

SELECT PRO.PROJECTID , MAX(ASSIGNEDTIME)
FROM WORKSON WO JOIN PROJECTS PRO ON WO.PROJECTID = PRO.PROJECTID
GROUP BY PRO.PROJECTID

SELECT PROJECTID, MAX(ASSIGNEDTIME) FROM EMPLOYEES E ,
WORKSON W WHERE E.EMPLOYEEID=W.EMPLOYEEID GROUP BY
W.PROJECTID;

--8
SELECT E1.EMPLOYEEID, E2.LASTNAME
FROM EMPLOYEES E1 CROSS JOIN EMPLOYEES E2
WHERE E1.SALARY < E2.SALARY
ORDER BY E1.EMPLOYEEID; 


SELECT E1.EMPLOYEEID, E2.LASTNAME FROM EMPLOYEES E1 CROSS
JOIN EMPLOYEES E2 WHERE E2.SALARY>E1.SALARY;

---------------------------------------------------------------------------
SELECT PRICE 
FROM ITEMS
UNION
SELECT UNITPRICE
FROM INGREDIENTS;

SELECT PRICE, UNITPRICEFROM ITEMS, INGREDIENTS;


SELECT NAME, PRICE
FROM ITEMS
UNION 
SELECT M.NAME, SUM(QUANTITY * PRICE * (1.0 - DISCOUNT))
FROM MEALS M, PARTOF P, ITEMS I
WHERE M.MEALID = P.MEALID AND P.ITEMID = I.ITEMID
GROUP BY M.MEALID, M.NAME;

SELECT ITEMID
FROM MADEWITH MW, INGREDIENTS ING
WHERE MW.INGREDIENTID = ING.INGREDIENTID AND FOODGROUP = 'VEGETABLES'
INTERSECT
SELECT ITEMID
FROM MADEWITH MW, INGREDIENTS ING
WHERE MW.INGREDIENTID = ING.INGREDIENTID AND FOODGROUP = 'FRUIT';

SELECT ITEMID
FROM ITEMS
EXCEPT
SELECT ITEMID
FROM MADEWITH MW, INGREDIENTS ING
WHERE MW.INGREDIENTID = ING.INGREDIENTID AND ING.NAME = 'CHEESE';

SELECT DISTINCT(ITEMID)
FROM MADEWITH MW, INGREDIENTS ING
WHERE MW.INGREDIENTID = ING.INGREDIENTID AND ING.NAME != 'CHEESE';

SELECT *
FROM MADEWITH MW, INGREDIENTS ING
WHERE MW.INGREDIENTID = ING.INGREDIENTID AND (ITEMID = 'MILSD' OR ITEMID = 'FRPLT');

SELECT *
FROM ITEMS
WHERE ITEMID = 'MILSD'

SELECT * 
FROM MADEWITH
SELECT * 
FROM MADEWITH MW, INGREDIENTS ING;

SELECT FOODGROUP
FROM MADEWITH MW, INGREDIENTS ING
WHERE MW.INGREDIENTID = ING.INGREDIENTID
AND
ITEMID = 'FRTPLT'
EXCEPT
SELECT FOODGROUP
FROM MADEWITH MW, INGREDIENTS ING
WHERE MW.INGREDIENTID = ING.INGREDIENTID
AND FOODGROUP = 'FRUIT'

SELECT VENDORID
FROM VENDORS
EXCEPT
SELECT VENDORID
FROM
INGREDIENTS;

SELECT COMPANYNAME
FROM VENDORS V LEFT JOIN INGREDIENTS I ON V.VENDORID = I.VENDORID
WHERE INGREDIENTID IS NULL;

SELECT ITEMID
FROM MADEWITH M, INGREDIENTS I
WHERE M.INGREDIENTID = I.INGREDIENTID AND FOODGROUP = 'MILK'
EXCEPT
(
SELECT ITEMID
FROM MADEWITH M, INGREDIENTS I
WHERE M.INGREDIENTID = I.INGREDIENTID AND FOODGROUP = 'MILK'
EXCEPT
SELECT ITEMID
FROM MADEWITH M, INGREDIENTS I
WHERE M.INGREDIENTID = I.INGREDIENTID AND FOODGROUP = 'FRUIT'
)

--------------------------------------------------------------------------

SELECT DISTINCT(STARTDATE) AS DATES
FROM PROJECTS 
WHERE STARTDATE IS NOT NULL
UNION
SELECT DISTINCT(ENDDATE) AS DATES
FROM PROJECTS
WHERE ENDDATE IS NOT NULL
ORDER BY DATES DESC;

SELECT DISTINCT(FOODGROUP)
FROM INGREDIENTS
EXCEPT
SELECT DISTINCT(FOODGROUP)
FROM INGREDIENTS
WHERE NAME = 'GRAPE'

SELECT FOODGROUP FROM INGREDIENTS
EXCEPT
SELECT FOODGROUP FROM INGREDIENTS WHERE NAME ='Grape' GROUP BY
FOODGROUP HAVING FOODGROUP IS NOT NULL;

--3
SELECT FIRSTNAME, LASTNAME
FROM EMPLOYEES EMP JOIN DEPARTMENTS DEPT ON
EMP.DEPTCODE = DEPT.CODE
WHERE DEPT.NAME = 'ROBOTIC SPOUSE'
INTERSECT
SELECT FIRSTNAME, LASTNAME
FROM EMPLOYEES EMP JOIN DEPARTMENTS DEPT ON
EMP.DEPTCODE = DEPT.CODE
WHERE DEPT.NAME = 'HARDWARE'

SELECT NAME, CODE 
FROM DEPARTMENTS
EXCEPT
SELECT NAME, DEPTCODE
FROM PROJECTS PRO, DEPARTMENTS DEPT
WHERE PRO.DEPTCODE = DEPT.CODE 
 

